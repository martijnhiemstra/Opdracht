package nl.humaninference.person.repository;

import static org.assertj.core.api.Assertions.assertThat;

import java.util.List;
import java.util.Optional;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;
import org.springframework.test.context.junit4.SpringRunner;

import nl.humaninference.person.entity.Department;

// We need @RunWith(SpringRunner.class) to ensure we can inject the IDepartmentRepository. Otherwise departmentRepository will be null
@RunWith(SpringRunner.class)
@DataJpaTest
public class DepartmentRepositoryTest {

	@Autowired
	private IDepartmentRepository departmentRepository;

	// This test isn't really needed sine findAll is generated by spring. I have added it so that we can verify that the 
	// data.sql is correctly loaded
    @Test
    public void test_findAll() {
    	List<Department> departments = departmentRepository.findAll();

        assertThat(departments).isNotNull();
        assertThat(departments.size()).isEqualTo(5);
    }

	@Test
	public void test_findById() {
		Optional<Department> departmentOptional = departmentRepository.findById(1L);

		assertThat(departmentOptional.isPresent()).isEqualTo(true);
		assertThat(departmentOptional.get().getId()).isEqualTo(1);
		assertThat(departmentOptional.get().getName()).isEqualTo("Sales");
		assertThat(departmentOptional.get().getPersons().size()).isEqualTo(2);
	}

}
